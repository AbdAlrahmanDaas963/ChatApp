{"version":3,"sources":["components/SigninButton.jsx","components/Message.jsx","components/Channel.jsx","App.js","reportWebVitals.js","index.js"],"names":["SigninButton","onClick","children","Message","createdAt","text","displayName","photoURL","className","src","alt","width","height","seconds","date","formattedDate","formatRelative","Date","charAt","toUpperCase","slice","formatDate","Channel","user","useState","messages","setMessages","newMessage","setNewMessage","setDocs","uid","db","firebase","firestore","query","collection","orderBy","limit","messagesRef","inputRef","React","createRef","useEffect","onSnapshot","querySnapshot","data","docs","map","doc","id","console","log","message","onSubmit","e","preventDefault","trimmedMessage","trim","add","FieldValue","serverTimestamp","ref","type","value","onChange","target","placeholder","disabled","xmlns","viewBox","d","transform","fill","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getAnalytics","App","initializing","setInitializing","auth","currentUser","setUser","onAuthStateChanged","signInWithGoogle","a","provider","GoogleAuthProvider","useDeviceLanguage","signInWithPopup","signOut","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b258e925.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction SigninButton({ onClick = null, children = null }) {\r\n  return <button onClick={onClick}>{children}</button>;\r\n}\r\n\r\nexport default SigninButton;\r\n","import React from \"react\";\r\nimport { formatRelative } from \"date-fns\";\r\n\r\nfunction Message({\r\n  createdAt = null,\r\n  text = \"\",\r\n  displayName = \"\",\r\n  photoURL = \"\",\r\n}) {\r\n  const formatDate = (date) => {\r\n    let formattedDate = \"\";\r\n    if (date) {\r\n      // Convert the date in words relative to the current date\r\n      formattedDate = formatRelative(date, new Date());\r\n      // Uppercase the first letter\r\n      formattedDate =\r\n        formattedDate.charAt(0).toUpperCase() + formattedDate.slice(1);\r\n    }\r\n    return formattedDate;\r\n  };\r\n  if (!text) return null;\r\n\r\n  return (\r\n    <div className=\"msg\">\r\n      <div className=\"img\">\r\n        {photoURL ? (\r\n          <img\r\n            src={photoURL}\r\n            alt=\"Avatar\"\r\n            className=\"rounded-full mr-4\"\r\n            width={45}\r\n            height={45}\r\n          />\r\n        ) : null}\r\n      </div>\r\n      <div className=\"body\">\r\n        <div className=\"header\">\r\n          <div className=\"name\">\r\n            {displayName ? <p>{displayName}</p> : null}\r\n          </div>\r\n          <div className=\"date\">\r\n            {createdAt?.seconds ? (\r\n              <p>{formatDate(new Date(createdAt.seconds * 1000))}</p>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <div className=\"content\">\r\n          <div>{text}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/firestore\";\r\n\r\nimport Message from \"./Message\";\r\n\r\nfunction Channel({ user = null }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [docs, setDocs] = useState([]);\r\n  const { uid, displayName, photoURL } = user;\r\n  const db = firebase.firestore();\r\n  const query = db.collection(\"messages\").orderBy(\"createdAt\").limit(100);\r\n  const messagesRef = db.collection(\"messages\");\r\n  const inputRef = React.createRef();\r\n\r\n  useEffect(() => {\r\n    // Subscribe to query with onSnapshot\r\n    const unsubscribe = query.onSnapshot((querySnapshot) => {\r\n      // Get all documents from collection - with IDs\r\n      const data = querySnapshot.docs.map((doc) => ({\r\n        ...doc.data(),\r\n        id: doc.id,\r\n      }));\r\n      // Update state\r\n      setDocs(data);\r\n      setMessages(data);\r\n      console.log(\"data :\", data);\r\n    });\r\n\r\n    // Detach listener\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const handleOnChange = (e) => {\r\n    setNewMessage(e.target.value);\r\n  };\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const trimmedMessage = newMessage.trim();\r\n    if (trimmedMessage) {\r\n      // Add new message in Firestore\r\n\r\n      messagesRef.add({\r\n        text: trimmedMessage,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        uid,\r\n        displayName,\r\n        photoURL,\r\n      });\r\n      // Clear input field\r\n      setNewMessage(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"channel\">\r\n      {\" \"}\r\n      <ul className=\"messages\">\r\n        {messages.map((message) => (\r\n          <li key={message.id}>\r\n            <Message {...message} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <form className=\"form\" onSubmit={handleOnSubmit}>\r\n        <input\r\n          ref={inputRef}\r\n          className=\"inpt-msg\"\r\n          type=\"text\"\r\n          value={newMessage}\r\n          onChange={handleOnChange}\r\n          placeholder=\"Type your message here...\"\r\n        />\r\n        <button type=\"submit\" className=\"send-btn\" disabled={!newMessage}>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"44.085\"\r\n            height=\"42.037\"\r\n            viewBox=\"0 0 44.085 42.037\"\r\n          >\r\n            <path\r\n              id=\"ic_send_24px\"\r\n              d=\"M2.017,29.748,37.089,16.374,2.017,3,2,13.4l25.063,2.972L2,19.346Z\"\r\n              transform=\"matrix(0.819, -0.574, 0.574, 0.819, -3.359, 18.816)\"\r\n              fill=\"#57bdeb\"\r\n            />\r\n          </svg>\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Channel;\r\n","import { useEffect, useState } from \"react\";\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\";\nimport \"firebase/compat/firestore\";\n// import { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\n\nimport SigninButton from \"./components/SigninButton\";\nimport Channel from \"./components/Channel\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDzJe-_lbLQF2xdplc-YpnjAzKMqA8-hGE\",\n  authDomain: \"chatapp-130f1.firebaseapp.com\",\n  projectId: \"chatapp-130f1\",\n  storageBucket: \"chatapp-130f1.appspot.com\",\n  messagingSenderId: \"334904828589\",\n  appId: \"1:334904828589:web:8d19c0daba5d77abc7dc24\",\n  measurementId: \"G-BMW45Q5EEP\",\n};\n// Initialize Firebase\nconst app = firebase.initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\n\nfunction App() {\n  const [initializing, setInitializing] = useState(true);\n  const [user, setUser] = useState(() => firebase.auth.currentUser);\n\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser(false);\n      }\n      if (initializing) {\n        setInitializing(false);\n      }\n      console.log(\"user :\", user);\n    });\n\n    // Cleanup subscription\n    return unsubscribe;\n  }, [initializing]);\n\n  const signInWithGoogle = async () => {\n    // Retrieve Google provider object\n    const provider = new firebase.auth.GoogleAuthProvider();\n    // Set language to the default browser preference\n    firebase.auth().useDeviceLanguage();\n    // Start sign in process\n    try {\n      await firebase.auth().signInWithPopup(provider);\n      console.log(\"logged in\");\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  const signOut = async () => {\n    try {\n      await firebase.auth().signOut();\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  return (\n    <div className=\"app\">\n      <div className=\"navbar\">\n        <div className=\"logo\">Chat</div>\n        {user ? (\n          <>\n            <SigninButton onClick={signOut}>Sign out</SigninButton>\n          </>\n        ) : (\n          <SigninButton onClick={signInWithGoogle}>\n            Sign in with Google\n          </SigninButton>\n        )}\n      </div>\n      {user && <Channel user={user} />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}